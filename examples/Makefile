#
# OMNeT++/OMNEST Makefile for mixim
#
# This file was generated with the command:
#  opp_makemake -f --nolink -O out -d obstacles -d Mac80211 -d multiConnectionManager -d lmac -d veins -d ieee802154a -d traci_launchd -d ieee80211p -d twoRayInterference -d BaseMoBANNetwork -d WSNRouting -d baseNetwork -d ieee802154Narrow -d CSMAMac -d bmac -d analogueModels -L../out/$$\(CONFIGNAME\)/src/base -L../out/$$\(CONFIGNAME\)/src/modules -L../out/$$\(CONFIGNAME\)/tests/testUtils -L../out/$$\(CONFIGNAME\)/src/base -L../out/$$\(CONFIGNAME\)/tests/power/utils -L../out/$$\(CONFIGNAME\)/src/modules -L../out/$$\(CONFIGNAME\)/tests/testUtils -lmiximbase -lmiximmodules -lmiximtestUtils -KFLOODINGHOVERING2_PROJ=/home/tapache/FloodingHovering2copy/FloodingHovering2 -KMIXIM_PROJ=..
#

# C++ include paths (with -I)
INCLUDE_PATH = -I.

# Output directory
PROJECT_OUTPUT_DIR = ../out
PROJECTRELATIVE_PATH = examples
O = $(PROJECT_OUTPUT_DIR)/$(CONFIGNAME)/$(PROJECTRELATIVE_PATH)

# Object files for local .cc and .msg files
OBJS =

# Message files
MSGFILES =

# Other makefile variables (-K)
FLOODINGHOVERING2_PROJ=/home/tapache/FloodingHovering2copy/FloodingHovering2
MIXIM_PROJ=..

#------------------------------------------------------------------------------

# Pull in OMNeT++ configuration (Makefile.inc or configuser.vc)

ifneq ("$(OMNETPP_CONFIGFILE)","")
CONFIGFILE = $(OMNETPP_CONFIGFILE)
else
ifneq ("$(OMNETPP_ROOT)","")
CONFIGFILE = $(OMNETPP_ROOT)/Makefile.inc
else
CONFIGFILE = $(shell opp_configfilepath)
endif
endif

ifeq ("$(wildcard $(CONFIGFILE))","")
$(error Config file '$(CONFIGFILE)' does not exist -- add the OMNeT++ bin directory to the path so that opp_configfilepath can be found, or set the OMNETPP_CONFIGFILE variable to point to Makefile.inc)
endif

include $(CONFIGFILE)

COPTS = $(CFLAGS)  $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
MSGCOPTS = $(INCLUDE_PATH)

# we want to recompile everything if COPTS changes,
# so we store COPTS into $COPTS_FILE and have object
# files depend on it (except when "make depend" was called)
COPTS_FILE = $O/.last-copts
ifneq ($(MAKECMDGOALS),depend)
ifneq ("$(COPTS)","$(shell cat $(COPTS_FILE) 2>/dev/null || echo '')")
$(shell $(MKPATH) "$O" && echo "$(COPTS)" >$(COPTS_FILE))
endif
endif

#------------------------------------------------------------------------------
# User-supplied makefile fragment(s)
# >>>
# <<<
#------------------------------------------------------------------------------

# Main target

all: $(OBJS) submakedirs Makefile
	@# Do nothing

submakedirs:  obstacles_dir Mac80211_dir multiConnectionManager_dir lmac_dir veins_dir ieee802154a_dir traci_launchd_dir ieee80211p_dir twoRayInterference_dir BaseMoBANNetwork_dir WSNRouting_dir baseNetwork_dir ieee802154Narrow_dir CSMAMac_dir bmac_dir analogueModels_dir

.PHONY: all clean cleanall depend msgheaders  obstacles Mac80211 multiConnectionManager lmac veins ieee802154a traci_launchd ieee80211p twoRayInterference BaseMoBANNetwork WSNRouting baseNetwork ieee802154Narrow CSMAMac bmac analogueModels
obstacles: obstacles_dir
Mac80211: Mac80211_dir
multiConnectionManager: multiConnectionManager_dir
lmac: lmac_dir
veins: veins_dir
ieee802154a: ieee802154a_dir
traci_launchd: traci_launchd_dir
ieee80211p: ieee80211p_dir
twoRayInterference: twoRayInterference_dir
BaseMoBANNetwork: BaseMoBANNetwork_dir
WSNRouting: WSNRouting_dir
baseNetwork: baseNetwork_dir
ieee802154Narrow: ieee802154Narrow_dir
CSMAMac: CSMAMac_dir
bmac: bmac_dir
analogueModels: analogueModels_dir

obstacles_dir:
	cd obstacles && $(MAKE) all

Mac80211_dir:
	cd Mac80211 && $(MAKE) all

multiConnectionManager_dir:
	cd multiConnectionManager && $(MAKE) all

lmac_dir:
	cd lmac && $(MAKE) all

veins_dir:
	cd veins && $(MAKE) all

ieee802154a_dir:
	cd ieee802154a && $(MAKE) all

traci_launchd_dir:
	cd traci_launchd && $(MAKE) all

ieee80211p_dir:
	cd ieee80211p && $(MAKE) all

twoRayInterference_dir:
	cd twoRayInterference && $(MAKE) all

BaseMoBANNetwork_dir:
	cd BaseMoBANNetwork && $(MAKE) all

WSNRouting_dir:
	cd WSNRouting && $(MAKE) all

baseNetwork_dir:
	cd baseNetwork && $(MAKE) all

ieee802154Narrow_dir:
	cd ieee802154Narrow && $(MAKE) all

CSMAMac_dir:
	cd CSMAMac && $(MAKE) all

bmac_dir:
	cd bmac && $(MAKE) all

analogueModels_dir:
	cd analogueModels && $(MAKE) all

.SUFFIXES: .cc

$O/%.o: %.cc $(COPTS_FILE)
	@$(MKPATH) $(dir $@)
	$(qecho) "$<"
	$(Q)$(CXX) -c $(CXXFLAGS) $(COPTS) -o $@ $<

%_m.cc %_m.h: %.msg
	$(qecho) MSGC: $<
	$(Q)$(MSGC) -s _m.cc $(MSGCOPTS) $?

msgheaders: $(MSGFILES:.msg=_m.h)
	$(Q)cd obstacles && $(MAKE) msgheaders
	$(Q)cd Mac80211 && $(MAKE) msgheaders
	$(Q)cd multiConnectionManager && $(MAKE) msgheaders
	$(Q)cd lmac && $(MAKE) msgheaders
	$(Q)cd veins && $(MAKE) msgheaders
	$(Q)cd ieee802154a && $(MAKE) msgheaders
	$(Q)cd traci_launchd && $(MAKE) msgheaders
	$(Q)cd ieee80211p && $(MAKE) msgheaders
	$(Q)cd twoRayInterference && $(MAKE) msgheaders
	$(Q)cd BaseMoBANNetwork && $(MAKE) msgheaders
	$(Q)cd WSNRouting && $(MAKE) msgheaders
	$(Q)cd baseNetwork && $(MAKE) msgheaders
	$(Q)cd ieee802154Narrow && $(MAKE) msgheaders
	$(Q)cd CSMAMac && $(MAKE) msgheaders
	$(Q)cd bmac && $(MAKE) msgheaders
	$(Q)cd analogueModels && $(MAKE) msgheaders

clean:
	$(qecho) Cleaning...
	$(Q)-rm -rf $O
	$(Q)-rm -f mixim mixim.exe libmixim.so libmixim.a libmixim.dll libmixim.dylib
	$(Q)-rm -f ./*_m.cc ./*_m.h

	-$(Q)cd obstacles && $(MAKE) clean
	-$(Q)cd Mac80211 && $(MAKE) clean
	-$(Q)cd multiConnectionManager && $(MAKE) clean
	-$(Q)cd lmac && $(MAKE) clean
	-$(Q)cd veins && $(MAKE) clean
	-$(Q)cd ieee802154a && $(MAKE) clean
	-$(Q)cd traci_launchd && $(MAKE) clean
	-$(Q)cd ieee80211p && $(MAKE) clean
	-$(Q)cd twoRayInterference && $(MAKE) clean
	-$(Q)cd BaseMoBANNetwork && $(MAKE) clean
	-$(Q)cd WSNRouting && $(MAKE) clean
	-$(Q)cd baseNetwork && $(MAKE) clean
	-$(Q)cd ieee802154Narrow && $(MAKE) clean
	-$(Q)cd CSMAMac && $(MAKE) clean
	-$(Q)cd bmac && $(MAKE) clean
	-$(Q)cd analogueModels && $(MAKE) clean

cleanall: clean
	$(Q)-rm -rf $(PROJECT_OUTPUT_DIR)

depend:
	$(qecho) Creating dependencies...
	$(Q)$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile -P\$$O/ -- $(MSG_CC_FILES)  ./*.cc
	$(Q)-cd obstacles && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd Mac80211 && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd multiConnectionManager && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd lmac && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd veins && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd ieee802154a && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd traci_launchd && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd ieee80211p && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd twoRayInterference && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd BaseMoBANNetwork && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd WSNRouting && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd baseNetwork && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd ieee802154Narrow && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd CSMAMac && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd bmac && if [ -f Makefile ]; then $(MAKE) depend; fi
	$(Q)-cd analogueModels && if [ -f Makefile ]; then $(MAKE) depend; fi

# DO NOT DELETE THIS LINE -- make depend depends on it.

